import unittest
from unittest.mock import Mock, patch
import twitch
from twitch import TwitchClient, TwitchHelix
import requests
from APIfuncional import apiTwitch

class TestApi(unittest.TestCase):
    
    def test_get_userid(self):
        prueba = apiTwitch()
        resultados = ["118237854", "31478096", "46719113"]
        nombres = ["albertto1198", "mym_alkapone", "gorilanerd"]

        for i in range(len(resultados)):
            salida_actual = resultados[i]
            salida_esperada = prueba.get_userid(nombres[i])
            self.assertAlmostEqual(salida_actual, salida_esperada)
    
    def test_get_followers(self):
        prueba = apiTwitch()
        salidas = [['97322738', '118974117', '233992790', '49656095', '158434891', '64582762', '28344564', '31894912', '42999001', '19106200', '31478096', '46719113', '80987594'],
        ['44445592', '97322738', '458195235', '42108204', '54947202', '100282796', '85956078', '444129558', '122259767', '51533859', '78819300', '130968097', '174809651', '453376326', 
        '426336938', '3389768', '226124664', '105959951', '101463126', '263084735', '92956455', '59580613', '137615174', '421838340', '151145128', '267475801', '69744144', '401652231',
         '73080281', '156588554', '67954430', '25216312', '30104304', '32463601', '115214089', '156519462', '76149772', '108005221', '6978352', '57717183', '190835892', '156068451',
          '277624494', '168251674', '214338593', '164762879', '128250412', '66370849', '183493127', '32715035', '1895664', '61504845', '36473331', '19249745', '154010989', '96738828',
           '43199383', '152725127', '233992790', '242387118', '49397431', '253143685', '57243834', '114500146', '114585438', '149857630', '35987962', '111764908', '55385619', '145522331',
            '143852571', '234294620', '246244003', '42894631', '19942092', '53580810', '197855687', '53184155', '51693898', '38519505', '120461718', '93126033', '80268054', '58602167',
             '39298218', '60056333', '87129596', '130345683', '58900313', '43856978', '130328615', '168861489', '52441811', '135339326', '173687771', '22484632', '134064337', '67650991',
              '39194511', '173163562', '51870280', '57793021', '68124914', '127651530', '87803283', '20420989', '158026153', '37785131', '151637804', '47939440', '52681626', '198790630',
               '125381567', '66691674', '26490481', '29829912', '87204022', '65171890', '110690086', '48851788', '138494173', '130471993', '37402112', '10207853', '38553197', '117379932',
                '85497910', '158434891', '63751459', '45736373', '126333570', '71092938', '78674657', '9679595', '97124985', '108427749', '70357283', '40874348', '2982838', '39645614', 
                '122801297', '127626120', '138094916', '74662686', '157241784', '86268118', '122413431', '147388918', '146013106', '142056245', '26202795', '26946000', '170396144', '21130533',
                 '36340781', '105528818', '106126484', '23593124', '144360146', '60978448', '26301881', '64479989', '19070311', '66150745', '132395117', '26933810', '77669901', '38301436',
                  '46719113', '104691100', '44883098', '42740485', '30610294', '103936130', '17337557', '75374213', '53606561', '32681757', '139718303', '60591392', '96437533', '122461130',
                   '116283763', '128480275', '122700223', '91586714', '36769016', '38446500', '4329841', '150530177', '109727760', '31239503', '19571641', '148578382', '83828553', '49160238',
                    '137923480', '100484450', '84574550', '109696261', '66302775', '109015081', '31582795', '54711426', '139738858', '75262446', '28577834', '66834260', '89530973', '73522418',
                     '8330235', '74371355', '86207248', '9460020', '119310350', '46254580', '90329519', '7236692', '26857029', '52375938', '65293756', '124924936', '106852329', '82830319',
                      '84409459', '24534372', '37817831', '11637091', '27754846', '333507', '31867293', '76385901', '48229036', '44978526', '95111602', '79343746', '35790122', '113028874', 
                      '32791749', '26085270', '20919491', '54825274', '48076581', '23822990', '52091823', '16764225', '79774729', '51753224', '48878319', '27627583', '84574069', '15564828',
                       '44578737', '39276140', '28881630', '46715780', '22510310', '63321379', '55347167', '27702961', '36138196', '18807904', '29925139', '23161357', '52326616', '43937696',
                        '28036688', '69602025', '61511133', '32632309', '65787005', '71646507', '40013673', '77023915', '36029255', '59543824', '31894912', '30928536', '25483691', '36986190',
                         '29795919', '2128782', '29249710', '46738023', '37319', '29283996', '22916751', '69955030', '44882903', '4221521', '43305584', '30016032', '36081806', '44890813',
                          '27651481', '66809383', '29900453', '30330419', '61629003', '28344564', '42999001', '50705028', '62954182', '44386471', '32575412', '49161847', '14293484', '24313979',
                           '47995605', '8014563', '39799471', '19106200', '39362969', '26637775', '26652220', '35998610', '37174252', '37815253', '30777889', '22744737', '38638036', '25058845',
                            '29528889', '8815236', '11717011'],
                             ['147237701', '404299967', '47947959', '22346597', '146699675', '36138196', '90727448', '451640753', '156588554', '85314373', '175121684', '169188075', '66217508',
                              '431857492', '54947202', '58486016', '121510236', '96593261', '174471727', '57169146', '13445024', '233992790', '68691467', '60978448', '121739677', '52229024',
                               '26560695', '36473331', '54548590', '59308271', '62389548', '92815321', '73460177', '109696261', '39856473', '30742061', '36443129', '163389925', '35963899', '43857981',
                                '60917582', '86087429', '127331253', '121665997', '6978352', '26946000', '213470680', '50536331', '125381567', '134333812', '118291065', '31622647', '211939875', '134064337',
                                 '136095661', '29577103', '118918431', '48653717', '120053161', '79407074', '95026186', '31867293', '158988379', '43199383', '142055874', '145393511', '38387010', '86778344',
                                  '22253819', '24991333', '36029255', '11771521', '144454374', '25653002', '82371606', '66131926', '68365064', '138138049', '54711426', '88573943', '155189871', '48535158',
                                   '37884818', '107030679', '127816279', '112763156', '173163562', '131887808', '156068451', '29249710', '146013106', '116249228', '38519505', '19571641', '198790630', '77669901',
                                    '68124914', '128531647', '61560224', '158434891', '32346640', '21617955', '49940618', '116703220', '57051641', '32715035', '38301436', '86268118', '30173897', '71731217',
                                     '84110474', '66302775', '5315168', '49656095', '22510310', '47939440', '9460020', '47578243', '26490481', '115104194', '68435186', '37402112', '123255141', '44882903',
                                      '75262446', '139718303', '101936909', '64649082', '30777889', '139738858', '86932052', '124924936', '23161357', '73080281', '31894912', '117211222', '42388062', '19106200',
                                       '76385901', '79343746', '28344564', '52091823', '37701508', '52375938', '61629003', '69955030', '43162226', '38226594', '56280324', '89530973', '85497910', '77085452',
                                        '26301881', '30330419', '61511133', '32791749', '97370197', '51753224', '42999001', '41524028', '66685764', '65787005', '59266429', '55347167', '28914510', '35790122',
                                         '24534372', '29795919', '31478096']]
        id_usuarios = ["118237854", "31478096", "46719113"]

        for r in range(len(salidas)):
            salida = salidas[r]
            salida_actual = prueba.get_followers(id_usuarios[r])
            salida_esperada = salida
            self.assertAlmostEqual(salida_actual, salida_esperada)


    def test_get_name(self):
        prueba = apiTwitch()
        resultados = ["albertto1198", "keriosriven", "ag_bean3r"]
        id_nombres = ["118237854", "118974117", "28344564"]
        for k in range(len(id_nombres)):
            salida = resultados[k]
            salida_actual = prueba.get_name(id_nombres[k])
            salida_esperada = salida
            self.assertAlmostEqual(salida_actual, salida_esperada)

    def test_get_followe(self):
        prueba = apiTwitch()
        lista_id = ["42999001", "97322738", "80987594"]
        resultados = [334555, 17537, 36997]

        for l in range(len(lista_id)):
            salida = resultados[l]
            salida_actual = prueba.get_followe(lista_id[l])
            salida_esperada = salida
            self.assertAlmostEqual(salida_actual, salida_esperada)
if __name__ == "__main__":
    unittest.main() 